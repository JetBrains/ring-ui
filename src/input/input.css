@import "../global/variables.css";
@import "../button/button.css";

@value unit from "../global/global.css";
@value iconOffset: calc(unit * 3.5);

.container {
  position: relative;

  box-sizing: border-box;

  font-size: var(--ring-font-size);
  line-height: var(--ring-line-height);

  & * {
    box-sizing: border-box;
  }
}

.input {
  --ring-input-padding-start: unit;
  --ring-input-padding-end: unit;

  width: 100%;
  padding-top: calc(unit / 2);
  padding-right: var(--ring-input-padding-end);
  padding-bottom: calc(unit / 2);
  padding-left: var(--ring-input-padding-start);

  transition: border-color var(--ring-ease);

  color: var(--ring-text-color);
  border: 1px solid var(--ring-borders-color);
  border-radius: var(--ring-border-radius);
  outline: none;
  background: transparent;

  font: inherit;

  caret-color: var(--ring-main-color);

  @nest [dir=rtl] & {
    padding-right: var(--ring-input-padding-start);
    padding-left: var(--ring-input-padding-end);
  }

  &:hover {
    transition: none;

    border-color: var(--ring-border-hover-color);
  }

  @nest .error & {
    border-color: var(--ring-icon-error-color);
  }

  &:focus {
    transition: none;

    border-color: var(--ring-main-color);
  }

  &[disabled] {
    color: var(--ring-disabled-color);
    border-color: var(--ring-border-disabled-color);
    background-color: var(--ring-disabled-background-color);

    -webkit-text-fill-color: var(--ring-disabled-color); /* Required for Safari, see RG-2063 for details */
  }

  /*
    Kill yellow/blue webkit autocomplete
    https://css-tricks.com/snippets/css/change-autocomplete-styles-webkit-browsers/
  */
  &:-webkit-autofill {
    &,
    &:hover,
    &:focus {
      transition: background-color 50000s ease-in-out 0s;
    }
  }
}

.withIcon .input {
  --ring-input-padding-start: iconOffset;
}

.clearable .input {
  --ring-input-padding-end: iconOffset;
}

.icon {
  position: absolute;
  top: 5px;
  left: unit;

  color: var(--ring-icon-secondary-color);

  @nest [dir=rtl] & {
    right: unit;
    left: auto;
  }
}

.clear {
  position: absolute;
  top: 4px;
  right: unit;

  padding-right: 0;

  @nest .empty & {
    display: none;
  }

  @nest [dir=rtl] & {
    right: auto;
    left: unit;
  }
}

textarea.input {
  overflow: hidden;

  box-sizing: border-box;

  resize: none;
}

.label {
  display: block;

  margin-bottom: calc(unit / 2);

  color: var(--ring-secondary-color);

  font-size: var(--ring-font-size-smaller);
  line-height: var(--ring-line-height-lowest);
}

.disabledLabel {
  color: var(--ring-disabled-color);
}

.input::placeholder {
  color: var(--ring-disabled-color);
}

.errorText {
  margin-top: calc(unit / 2);

  color: var(--ring-error-color);

  font-size: var(--ring-font-size-smaller);
  line-height: var(--ring-line-height-lowest);
}

.sizeS {
  width: calc(unit * 12);
}

.sizeM {
  width: calc(unit * 30);
}

.sizeL {
  width: calc(unit * 50);
}

.sizeFULL {
  width: 100%;
}

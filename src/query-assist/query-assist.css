@import "../global/variables.css";
@import "../button/button.css";

@value unit from "../global/global.css";
@value overInputZIndex: 2;
@value inputGap: calc(unit * 3);

.queryAssist {
  --ring-input-icon-offset: calc(unit * 2.5);
  --ring-input-padding-inline: unit;
  --ring-input-padding-block: 1px;

  position: relative;

  display: flex;
  align-items: center;

  box-sizing: border-box;
  min-height: calc(var(--ring-input-padding-inline) * 3);
  padding: var(--ring-input-padding-block) var(--ring-input-padding-inline);

  transition: border-color var(--ring-ease);

  border: 1px solid var(--ring-borders-color);
  border-radius: var(--ring-border-radius);

  font-size: var(--ring-font-size);
  line-height: var(--ring-line-height);

  & * {
    box-sizing: border-box;
  }

  &:hover {
    transition: none;

    border-color: var(--ring-border-hover-color);
  }

  &:focus-within {
    transition: none;

    border-color: var(--ring-main-color);
  }

  /*
    Kill yellow/blue webkit autocomplete
    https://css-tricks.com/snippets/css/change-autocomplete-styles-webkit-browsers/
  */
  &:-webkit-autofill {
    &,
    &:hover,
    &:focus {
      transition: background-color 50000s ease-in-out 0s;
    }
  }

  @nest .error & {
    border-color: var(--ring-icon-error-color);
  }
}

.queryAssistDisabled {
  color: var(--ring-disabled-color);
  border-color: var(--ring-border-disabled-color);
  background-color: var(--ring-disabled-background-color);

  -webkit-text-fill-color: var(--ring-disabled-color); /* Required for Safari, see RG-2063 for details */
}

.huge {
  --ring-input-padding-block: 5px;

  max-height: calc(var(--ring-input-padding-inline) * 4);

  padding: 0 0 0 var(--ring-input-padding-inline);

  & .actions {
    padding-right: var(--ring-input-padding-inline);
  }

  & .placeholder {
    padding-left: 0;
  }

  @nest [dir=rtl] & {
    padding: 0 var(--ring-input-padding-inline) 0 0;

    border: 1px solid var(--ring-borders-color);

    & .actions {
      padding: 0 var(--ring-input-padding-inline);
    }
  }
}

.input {
  overflow: hidden;

  flex-grow: 1;

  margin: 0;

  cursor: text;

  transition: border-color var(--ring-ease);
  white-space: nowrap;

  color: var(--ring-text-color);
  outline: none;
  background: transparent;

  font: inherit;
  scrollbar-width: none;

  caret-color: var(--ring-main-color);
}

.letter-text {
  color: var(--ring-warning-color);
}

.letterDefault,
.letter-field-name {
  color: var(--ring-text-color);
}

.letter-field-value {
  color: var(--ring-link-color);
}

.letter-operator {
  color: var(--ring-secondary-color);
}

.letter-error {
  padding-bottom: 1px;

  border-bottom: 1px solid var(--ring-icon-error-color);
}

.highlight {
  font-weight: 600;
}

.service {
  color: var(--ring-secondary-color);
}

.placeholder {
  composes: resetButton from "../global/global.css";

  position: absolute;

  display: block;
  overflow: hidden;

  width: calc(100% - var(--ring-input-padding-inline) * 4);
  padding-left: calc(var(--ring-input-padding-inline) * 3 - var(--ring-input-padding-block));

  white-space: nowrap;

  text-overflow: ellipsis;

  pointer-events: none;

  color: var(--ring-disabled-color);

  @nest [dir=rtl] & {
    padding-right: calc(var(--ring-input-padding-inline) * 3 - var(--ring-input-padding-block));

    text-align: right;
  }
}

.letter {
  display: inline;
}

.actions {
  display: inline-flex;
  align-items: center;
  justify-content: center;

  height: 100%;
  max-height: calc(var(--ring-input-padding-inline) * 2);
  padding-left: var(--ring-input-padding-inline);

  line-height: inherit;

  @nest [dir=rtl] & {
    padding: 0 var(--ring-input-padding-inline) 0 0;
  }
}

.icon {
  padding-right: var(--ring-input-padding-inline);

  color: var(--ring-icon-secondary-color);

  @nest [dir=rtl] & {
    padding: 0 0 0 var(--ring-input-padding-inline);
  }
}

.rightSearchButton {
  padding: 5px 9px;

  cursor: pointer;

  transition: border-color var(--ring-ease);

  color: var(--ring-icon-secondary-color);

  border: 1px solid var(--ring-borders-color);
  border-right: 0;
  border-radius: var(--ring-border-radius);
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;

  @nest .queryAssist.queryAssist:focus-within & {
    transition: none;

    border-color: var(--ring-main-color);
  }

  @nest .queryAssist:hover & {
    transition: none;

    border-color: var(--ring-border-hover-color);
  }
}

.clear {
  top: 1px;

  padding-right: 0;

  @nest [dir=rtl] & {
    padding-right: var(--ring-input-padding-inline);
    padding-left: 0;
  }
}

.loaderOnTheRight {
  right: 1px;

  left: auto;
}

.input::-webkit-scrollbar {
  display: none;
}

.withoutGlass {
  padding-left: 0;

  @nest [dir=rtl] & {
    padding-right: 0;
  }
}

@import "../global/variables.css";

@value unit, resetButton from "../global/global.css";
@value listSpacing: unit;

.list {
  position: relative;

  z-index: 1;

  border-radius: var(--ring-border-radius);

  line-height: normal;
}

.simpleInner {
  overflow: auto;
}

.scrolling {
  pointer-events: none;
}

.separator {
  display: block;

  min-height: listSpacing;

  margin-top: listSpacing;
  padding: 0 calc(unit * 2) 1px;

  text-align: right;

  color: var(--ring-secondary-color);
  border-top: 1px solid var(--ring-line-color);

  font-size: var(--ring-font-size-smaller);
  line-height: var(--ring-line-height-lower);
}

.separator_first {
  margin-top: 0;
  padding-top: 0;

  border: none;
}

.item {
  composes: resetButton;

  display: block;

  box-sizing: border-box;

  width: 100%;

  text-align: left;
  vertical-align: bottom;
  white-space: nowrap;
  text-decoration: none;

  outline: none;

  font-size: var(--ring-font-size);
  line-height: calc(unit * 3);
}

.item.item {
  padding: 3px calc(unit * 2) 5px;
}

.itemContainer {
  position: relative;
}

.compact {
  line-height: calc(unit * 2);
}

.error {
  cursor: default;

  /* Override ring-link */
  &,
  &:hover,
  &:focus,
  &:visited {
    color: var(--ring-error-color);
  }
}

.add {
  padding: unit calc(2 * unit);

  line-height: calc(4 * unit);
}

.top {
  display: flex;
  align-items: baseline;
  flex-direction: row;
}

.left {
  align-self: center;
  flex-shrink: 0;
}

.label {
  overflow: hidden;
  flex-grow: 1;
  flex-shrink: 1;

  text-align: left;
  white-space: nowrap;
  text-overflow: ellipsis;

  @nest [dir=rtl] & {
    text-align: right;
    direction: ltr;
  }
}

.description {
  overflow: hidden;
  flex-shrink: 100;

  padding-left: unit;

  text-align: right;
  white-space: nowrap;
  text-overflow: ellipsis;

  color: var(--ring-secondary-color);

  font-size: var(--ring-font-size-smaller);
  font-weight: 400;
  line-height: var(--ring-line-height-lowest);
}

.right {
  display: flex;
  align-items: center;
  align-self: center;
  flex-direction: row;
  flex-shrink: 0;
}

.details {
  margin-bottom: 6px;

  white-space: normal;

  color: var(--ring-secondary-color);

  font-size: var(--ring-font-size-smaller);
  line-height: var(--ring-line-height-lowest);
}

.padded {
  margin-left: 20px;
}

/* Override :last-child */
.hint.hint {
  margin-bottom: 0;

  border-top: 1px solid var(--ring-line-color);
  background-color: var(--ring-sidebar-background-color);

  font-size: var(--ring-font-size-smaller);
}

.action {
  cursor: pointer;

  color: var(--ring-text-color);
}

/* override link */
.actionLink.actionLink {
  transition: none;
}

.hover:not(.error) {
  background-color: var(--ring-selected-background-color);
}

.icon {
  display: inline-block;

  width: 20px;
  height: 20px;
  margin-left: calc(unit * 2);

  background-repeat: no-repeat;
  background-position: center;

  background-size: contain;
}

.highlight {
  color: var(--ring-link-hover-color);
}

.service {
  color: var(--ring-secondary-color);
}

.glyph {
  float: left;

  width: 20px;
  margin-right: unit;

  color: var(--ring-icon-secondary-color);
}

.avatar {
  composes: glyph;

  top: 0;
}

.rightGlyph {
  composes: glyph;

  float: right;

  margin-right: 0;
  margin-left: calc(unit * 2);
}

.checkboxContainer {
  position: absolute;
  top: 7px;
  left: 19px;

  width: 20px;
  height: 20px;
  margin-right: unit;
}

.compact .checkboxContainer {
  top: 0;

  width: calc(unit * 2);
  height: calc(unit * 2);
}

.title {
  display: block;

  margin-top: 10px;
  margin-bottom: 6px;
  padding: listSpacing calc(unit * 2) 0;

  text-align: left;

  @nest [dir=rtl] & {
    text-align: right;
    direction: ltr;
  }
}

.title_first {
  margin-top: 0;
}

.text {
  letter-spacing: 1.5px;
  text-transform: uppercase;

  color: var(--ring-secondary-color);

  font-size: var(--ring-font-size-smaller);
}

.fade {
  position: absolute;
  bottom: 0;

  width: 100%;
  height: calc(unit * 3);

  pointer-events: none;

  background: linear-gradient(to bottom, rgba(255, 255, 255, 0), var(--ring-content-background-color));
}

.disabled {
  pointer-events: none;

  color: var(--ring-disabled-color);
}

/**
 * @name Palette
 * @description Palette is used for tags and custom-fields
 * @example
 <example name="Palette">
   <file name="index.html">
    <div ng-app="Example.palette" ng-controller="PaletteCtrl as paletteCtrl">
      <h4>ColorId</h4>
      <div ng-repeat="i in paletteCtrl.arr5" class="example">
        <div ng-repeat="j in paletteCtrl.arr7"
             ng-init="colorId = i * 7 + j"
             ng-attr-class="ring-palette_color-{{colorId}}">
          Color {{colorId}}
        </div>
      </div>
      <h4>ToneId and BrightnessId</h4>
      <div class="example" ng-repeat="toneId in paletteCtrl.arr7">
        <div><b>Tone {{toneId}}:</b></div>
        <div ng-repeat="brightnessId in paletteCtrl.arr5"
             ng-attr-class="ring-palette_tone-{{toneId}}-{{brightnessId}}">
          Brightness {{brightnessId}}
        </div>
      </div>
    </div>
   </file>
   <file name="index.scss" webpack="true">
      .example {
        margin: 4px;
        div {
          width: 90px;
          display: inline-block;
        }
      }
   </file>
   <file name="index.js" webpack="true">
      require('angular');
      require('ring-ui/components/palette/palette.scss');
      require('./index.scss');

      angular.module('Example.palette', [])
        .controller('PaletteCtrl', function() {
          function xrange(num) {
            var arr = new Array(num);
            for (var i = 0; i < arr.length; ++i) {
              arr[i] = i;
            }
            return arr;
          }
          this.arr5 = xrange(5);
          this.arr7 = xrange(7);
        });
   </file>
 </example>
 */


$palette-white-text: #fff;
$palette-grey-text: #444;

$palette-array: // [(background, text)]

  // Brightness 1
  #e6e6e6	#888888,
  #e6f6cf	#4da400,
  #d8f7f3	#45818e,
  #e0f1fb	#3d85c6,
  #fce5f1	#dc5766,
  #ffee9c	#b45f06,
  #f7e9c1	#b45f06,

  // Brightness 2
  #bababa	$palette-grey-text,
  #b7e281	$palette-grey-text,
  #92e1d5	$palette-grey-text,
  #a6e0fc	$palette-grey-text,
  #ffc8ea	$palette-grey-text,
  #fed74a	$palette-grey-text,
  #e0c378	$palette-grey-text,

  // Brightness 3
  #878787	$palette-white-text,
  #7dbd36	$palette-white-text,
  #25beb2	$palette-white-text,
  #42a3df	$palette-white-text,
  #ff7bc3	$palette-white-text,
  #ff7123	$palette-white-text,
  #ce6700	$palette-white-text,

  // Brightness 4
  #4d4d4d	$palette-white-text,
  #409600	$palette-white-text,
  #2f9890	$palette-white-text,
  #0070e4	$palette-white-text,
  #dc0083	$palette-white-text,
  #e30000	$palette-white-text,
  #8d5100	$palette-white-text,

  // Brightness 5
  #1a1a1a	$palette-white-text,
  #246512	$palette-white-text,
  #00665e	$palette-white-text,
  #0050a1	$palette-white-text,
  #900052	$palette-white-text,
  #8e1600	$palette-white-text,
  #553000	$palette-white-text;

@mixin add-palette-colors {
  $i: 0;
  $brightness: 0;

  @each $color in $palette-array {
    $background: nth($color, 1);
    $text: nth($color, 2);

    &_color-#{$i} {
      background-color: $background;
      color: $text;
    }

    $tone: $i % 7;
    &_tone-#{$tone}-#{$brightness} {
      background-color: $background;
      color: $text;
    }

    $i: $i + 1;
    @if $tone == 6 {
      $brightness: $brightness + 1;
    }
  }
}

.ring-palette {
  @include add-palette-colors();
}

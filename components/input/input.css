@value unit, font-lower, font-smaller-lower, font-size-smaller, line-color, white-color, gray-color, disabled-color, main-color, error-color from  "../global/global.css";

.container {
  composes: font-lower;
  padding-top: calc(unit * 2);
  position: relative;

  & * {
    box-sizing: border-box;
  }
}

.input {
  min-height: calc(unit * 4);
  width: 100%;
  padding: 0;
  font: inherit;
  border: none;
  outline: none;
  background-color: white-color;

  &::placeholder {
    color: disabled-color;
  }

  &[disabled] {
    color: disabled-color;
  }

  /*
    Kill yellow webkit autocomplete
    https://css-tricks.com/snippets/css/change-autocomplete-styles-webkit-browsers/
  */
  &:-webkit-autofill {
    &, &:hover, &:focus {
      box-shadow: 0 0 0px 1000px white-color inset;
      transition: background-color 5000s ease-in-out 0s;
    }
  }
}

textarea.input {
  box-sizing: border-box;
  overflow: hidden;
  resize: none;
}

.label {
  color: gray-color;
  pointer-events: none;
  position: absolute;
  background: white-color;
  top:calc(unit * 3);
  left: 0;
  transition: all .15s ease-out;
}

.input:focus ~ .label,
.container.active > .label,
.container:not(.empty) > .label {
  background: transparent;
  font-size: font-size-smaller;
  top: 0;
}

input:focus ~ .label {
  color: main-color;
}

.error > input:focus ~ .label {
  color: error-color;
}

.underline {
  height: 2px;
  border-bottom: 1px solid line-color;
}

.input[disabled] ~ .underline {
  border-bottom-style: dashed;
}

.focusUnderline,
.errorUnderline {
  margin-top: -2px;
  height: 2px;
  width: 0;
  background: main-color;
}

.errorUnderline {
  background: error-color;
}

.input:focus ~ .focusUnderline,
.container.active > .focusUnderline,
.error > .errorUnderline {
  width: 100%;
  transition: width .15s ease-out;
}

.errorText {
  color: error-color;
  composes: font-smaller-lower;
  box-sizing: border-box;
  height: 0;
  overflow: hidden;
  padding-top: unit;
  transition: height .3s ease-out;
}

.sizeS {
  width: calc(unit * 12);
}

.sizeM {
  width: calc(unit * 30);
}

.sizeL {
  width: calc(unit * 50);
}

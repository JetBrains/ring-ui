@value unit, font-lower, font-size-smaller, line-height-lowest, line-color, dark-line-color, white-color, gray-color, dark-gray-color, darker-gray-color, main-color, error-color, text-color, ease, fast-ease from  "../global/global.css";

@value text-shadow: 0 0 0;

.container {
  composes: font-lower;
  padding-top: calc(unit * 2);
  position: relative;
  box-sizing: border-box;
  min-height: calc(unit * 8);

  & * {
    box-sizing: border-box;
  }
}

.borderless {
  padding: 0;
  min-height: calc(unit * 4);
}

.input {
  min-height: calc(unit * 4);
  width: 100%;
  padding: 0 0 3px 0;
  font: inherit;
  border: none;
  outline: none;
  background: transparent;
  caret-color: main-color;

  @nest .clearable & {
    padding-right: calc(unit * 3);
  }

  @nest .light & {
    color: text-color;
  }

  @nest .dark & {
    color: white-color;
  }

  &::placeholder {
    text-shadow: none;
    color: transparent;
  }

  &[disabled] {
    color: gray-color;
  }

  /*
    Kill yellow webkit autocomplete
    https://css-tricks.com/snippets/css/change-autocomplete-styles-webkit-browsers/
  */
  &:-webkit-autofill {
    &, &:hover, &:focus {
      transition: background-color 50000s ease-in-out 0s;
    }

    & ~ .label {
      font-size: font-size-smaller;
      top: calc(unit / 2);
    }
  }
}

.clear {
  @nest .empty & {
    display: none;
  }
  position: absolute;
  top: 14px;
  @nest .borderless & {
    top: -2px;
  }
  /* override Button */
  && {
    line-height: calc(unit * 4);
  }
  right: 0;
}

textarea.input {
  box-sizing: border-box;
  padding-top: unit;
  overflow: hidden;
  resize: none;
}

.label {
  pointer-events: none;
  position: absolute;
  top: calc(unit * 3 - 2px);
  left: 0;
  transition: all fast-ease;

  @nest .light & {
    color: dark-gray-color;
  }

  @nest .dark & {
    color: darker-gray-color;
  }
}

.input:focus ~ .label,
.container.active > .label,
.container:not(.empty) > .label {
  font-size: font-size-smaller;
  top: calc(unit / 2);
}

.noLabel .input::placeholder,
.input:focus::placeholder {
  transition: text-shadow ease;
}

.light.noLabel .input::placeholder,
.light .input:focus::placeholder {
  text-shadow: text-shadow gray-color;
}

.dark.noLabel .input::placeholder,
.dark .input:focus::placeholder {
  text-shadow: text-shadow text-color;
}

.input:focus ~ .label {
  color: main-color;
}

.error > .input:focus ~ .label {
  color: error-color;
}

.underline {
  height: 1px;

  border-bottom-width: 1px;
  border-bottom-style: solid;

  @nest .light & {
    border-color: line-color;
  }

  @nest .dark & {
    border-color: dark-line-color;
  }
}

.input[disabled] ~ .underline {
  border-bottom-style: dashed;
}

.focusUnderline,
.errorUnderline {
  height: 2px;
  width: 0;
}

.focusUnderline {
  margin-top: -1px;
  background: main-color;
}

.errorUnderline {
  margin-top: -2px;
  background: error-color;
}

.input:focus ~ .focusUnderline,
.container.active > .focusUnderline,
.error > .errorUnderline {
  width: 100%;
  transition: width .15s ease-out;
}

.errorText {
  color: error-color;
  font-size: font-size-smaller;
  line-height: line-height-lowest;
  box-sizing: border-box;
  height: 0;
  overflow: hidden;
  padding: calc(unit / 2) 0 unit;
  transition: height .3s ease-out;
}

.sizeS {
  width: calc(unit * 12);
}

.sizeM {
  width: calc(unit * 30);
}

.sizeL {
  width: calc(unit * 50);
}

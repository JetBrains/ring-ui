// Do not place here anything but variables and mixins

$ring-unit: 8px;

$ring-text-color: #1A1A1A;

$ring-link-color:  #1866C5;
$ring-link-hover-color: #FF5A00;

$ring-error-color: #C10000;

$ring-gray-color: #CCC;
$ring-dark-gray-color: #888;

$ring-green-color: #84AB28;
$ring-blue-color: #25B7FF;

$ring-border-color: rgba(0, 0, 0, 0.2);
$ring-outline-color: rgba(37, 183, 255, 0.5);

$ring-border-radius: 3px;

@mixin rgba-attribute($attribute, $color, $background: #FFF) {
  $solid-color: mix(opacify($color, 1), $background, alpha($color) * 100%);
  #{$attribute}: $solid-color;
  #{$attribute}: $color;
}

$ring-fonts-dir: 'fonts/' !default;
$ring-font-size: 13px;
$ring-font-size-smaller: 11px;

@mixin ring-clearfix() {
  &:after {
    clear: both;
    content: '';
    display: block;
  }
}

@mixin ring-font($font-size: $ring-font-size) {
  color: $ring-text-color;
  font-family: "Helvetica Neue", Arial, sans-serif;
  font-size: $font-size;
}

// To be used at large sizes
// As close as possible to Helvetica Neue Thin (to replace Gotham)
@mixin ring-thin-font() {
  font-weight: 100;  // Renders Helvetica Neue UltraLight on OS X, but otherwise it would be just Light
  font-family: "Segoe UI", "Helvetica Neue", Helvetica, Arial, sans-serif;
}

@mixin ring-monospace-font() {
  font: 12px Menlo, "Bitstream Vera Sans Mono", "Ubuntu Mono", "Courier New", Courier, monospace;
}

@mixin ring-vertical-compensation($compensation: -2px, $position: relative) {
  position: $position;
  top: $compensation;
}

@mixin ring-input-control-widths($control-class-name) {

  @mixin set-width-in-pixels($width) {
    width: $width;
    & ~ .ring-input__error-bubble {
      left: $width + 2;
    }
  }

  @mixin set-width-in-percents($width) {
    width: $width;
    & ~ .ring-input__error-bubble {
      left: calc(#{$width} + 2px);
    }
  }

  $xshort-width: 50px;
  $short-width: 100px;
  $medium-width: 25 * $ring-unit;
  $long-width: 50 * $ring-unit;

  #{$control-class-name} {
    @include set-width-in-percents(100%);
  }

  #{$control-class-name}_xshort {
    @include set-width-in-pixels($xshort-width);
  }

  #{$control-class-name}_short {
    @include set-width-in-pixels($short-width);
  }

  #{$control-class-name}_medium {
    @include set-width-in-pixels($medium-width);
  }

  #{$control-class-name}_long {
    @include set-width-in-pixels($long-width);
  }

  /**
    It is needed override default size (size without modifiers) in forms
    For default input control has width 100%, but in forms - $medium-width.
    We cannot get rid of it and use in forms something like class="ring-form ring-form_medium" until (at least) QueryAssist has not possibility to add custom classes to its input
  **/
  .ring-form__control {
    .ring-input__error-bubble {
      left: $medium-width + 2px;
    }

    #{$control-class-name} {
      @include set-width-in-pixels($medium-width);
    }

    #{$control-class-name}_xshort {
      @include set-width-in-pixels($xshort-width);
    }

    #{$control-class-name}_short {
      @include set-width-in-pixels($short-width);
    }

    #{$control-class-name}_medium {
      @include set-width-in-pixels($medium-width);
    }

    #{$control-class-name}_long {
      @include set-width-in-pixels($long-width);
    }

    #{$control-class-name}_full-width {
      @include set-width-in-percents(100%);
    }
  }
}

// Common z-index-values

// Invisible element is an absolutely positioned element which should be below
// all other elements on the page.
$ring-invisible-element-z-index: -1;

// Z-index for fixed elements.
$ring-fixed-z-index: 1;

// Elements which should overlay all other elements on the page.
$ring-overlay-z-index: 5;

// Alerts, which should de displayed above overlays.
$ring-alert-z-index: 6;

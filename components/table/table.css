@value global: '../global/global.css';
@value unit, main-color, text-color, border-hover-color, dark-gray-color, darker-gray-color, line-color, sidebar-background-color, selected-background-color, font-smaller-lower, fast-ease, fixed-z-index, ellipsis from global;

.tableWrapper {
  position: relative;
}

.table {
  border-spacing: 0;
  width: 100%;
}


.userSelectNone {
  user-select: none;
}


.headerCell {
  & {
    composes: font-smaller-lower;
    color: dark-gray-color;
    font-weight: 200;
    text-align: left;
    white-space: nowrap;
    height: calc(unit * 3);
    padding-right: calc(unit * 5);
    box-sizing: border-box;
    box-shadow: inset 0px -1px 0px 0px line-color;
  }

  &:first-child {
    padding-left: calc(unit * 2);
  }

  &:last-child {
    padding-right: calc(unit * 4);
    width: 100%;
  }

  &:nth-child(1) {
    min-width: 297px;
  }

  &:nth-child(1):only-child {
    max-width: none;
    width: initial;
  }

  &.headerCellSorted {
    font-weight: 500;
  }

  &.headerCellSortable {
    cursor: pointer;
  }

  & .sorter {
    margin-left: 6px;
    display: none;
    position: absolute;
    user-select: none;
  }

  &.headerCellSortable .sorter {
    display: inline-block;
  }

  & .sorter .icon {
    top: -2px;
  }
}

.header {
  & {
    color: dark-gray-color;
    background-color: table-header-background-color;
  }

  & .headerCell {
    height: calc(unit * 5 + 1);
    box-sizing: border-box;
    border-top: 1px solid table-border-color;
    box-shadow: inset 0px 1px 0px 0px box-shadow-color;
  }

  & .caption {
    text-transform: uppercase;
    letter-spacing: .2em;
  }

  & .headerCell .sorter {
    margin-top: -1px;
  }
}

.subHeader {
  & {
    font-size: 12px;
    color: gray-color;
    background-color: table-border-color;
  }

  & .headerCell {
    height: 25px;
    box-sizing: border-box;
    border-top: 1px solid table-caption-border-color;
  }

  & .headerCell:first-child {
    padding-left: calc(unit * 4);
    &:empty {
      padding-left: 0;
    }
  }
}

.subHeaderFixed {
  position: fixed;
  top: 0;
  z-index: fixed-z-index;
  background-color: rgba(256, 256, 256, 0.95);
}


.row {
  & {
    outline: none;
    transition: background-color fast-ease;
    line-height: 39px;
  }

  @nest .table:not(.disabledHover) &:hover {
    background-color: selected-background-color;
    transition: none;
  }

  @nest .table:not(.multiSelection) &.rowFocused,
  .rowSelected {
    background-color: sidebar-background-color;
  }

  &.rowFocused {
    box-shadow: inset 0 0 0 2px border-hover-color;
  }
}

.loadingOverlay {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;

  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(255, 255, 255, 0.5);
}

.cell {
  & {
    composes: ellipsis;
    color: text-color;

    height: calc(unit * 4);
    box-sizing: content-box;
    padding-right: calc(unit * 5);
  }

  &:first-child {
    padding-left: calc(unit * 2);
  }

  &:last-child {
    padding-right: calc(unit * 4);
    width: 100%;
    /* Markup hack, allows cell to have content which is wider than cell and collapses it */
    max-width: 0;
  }

  &:nth-child(2) {
    padding-left: 0;
    min-width: calc(unit * 37);
    max-width: calc(unit * 77);
  }

  &:nth-child(1):only-child {
    max-width: none;
    width: initial;
  }
}

.cellUnlimited {
  width: 100%;
}

.cellRight {
  text-align: right;
}

.metaColumn {
  position: relative;
  padding-right: 0;
  float: left;
  width: 21px;
  height: 16px;
  padding-right: unit;

  &.metaColumnSpaced {
  }
}

.dragHandle {
  display: none;
  position: absolute;
  left: -24px;
  top: -12px;

  cursor: grab;
  padding: unit;
  color: gray-color;

  &:hover {
    color: link-hover-color;
  }
}

.visibleDragHandle {
  display: block;
}

.row:hover .dragHandle {
  display: block;
}

.draggingRow {
  background-color: selected-background-color;
  transition: none;

  && .dragHandle {
    display: block;
    cursor: grabbing;
    & svg {
      color: main-color;
    }
  }

  background-color: #FFF;
}

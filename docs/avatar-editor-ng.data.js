window.source = {
  "title": "Avatar Editor Ng",
  "url": "avatar-editor-ng.html",
  "type": "js",
  "content": "import angular from 'angular';\n\nimport {PencilIcon} from '../icon';\n\nimport messageBundleNg from '../message-bundle-ng/message-bundle-ng';\nimport alertService from '../alert-service/alert-service';\nimport IconNG from '../icon-ng/icon-ng';\n\nimport '../avatar-editor/avatar-editor.scss';\n\nconst angularModule = angular.module('Ring.avatar-editor', [messageBundleNg, IconNG]);\n\n/**\n * @name Avatar Editor Ng\n * @tags Ring UI Language\n * @category Legacy Angular\n * @description Allows to choose images to be uploaded as Data URI. On-select attribute will receive the\n * filename as `name` and the file contents as `data`.\n * @example\n   <example name=\"Avatar Editor Ng\">\n     <file name=\"index.html\">\n       <div ng-app=\"test\" ng-strict-di ng-controller=\"testCtrl as ctrl\">\n         <rg-avatar-editor\n           on-select=\"ctrl.name = name\"\n           delete-label=\"Clear\"\n           ng-model=\"ctrl.data\"></rg-avatar-editor>\n\n         <h3>{{ ctrl.name || 'No file name' }}</h3>\n         <img style=\"max-width: 300px; max-height: 300px;\"ng-src=\"{{ ctrl.data }}\" />\n       </div>\n     </file>\n     <file name=\"index.js\" webpack=\"true\">\n       import angular from 'angular';\n       import AvatarEditorNG from '@jetbrains/ring-ui/components/avatar-editor-ng/avatar-editor-ng';\n\n       angular.module('test', [AvatarEditorNG]).controller('testCtrl', function () {\n          const ctrl = this;\n\n          ctrl.data = `data:image/svg+xml;utf8,\n            <svg viewBox=\"0 0 120 120\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle cx=\"60\" cy=\"60\" r=\"50\" style=\"fill: #00cc00\"/>\n            </svg>\n          `;\n        });\n     </file>\n   </example>\n */\nfunction rgAvatarEditor() {\n  return {\n    restrict: 'E',\n    scope: {\n      model: '=ngModel',\n      onSelect: '&',\n      default: '@',\n      ngDisabled: '=',\n      showDeleteButton: '=?',\n      showAddButton: '=?',\n      deleteLabel: '@',\n      addMessage: '@'\n    },\n    template: require('./avatar-editor-ng.html'),\n    transclude: true,\n    controller: [\n      '$scope', '$attrs', 'RingMessageBundle',\n      function controller($scope, $attrs, RingMessageBundle) {\n        let fileInput;\n        $scope.editIcon = PencilIcon;\n        $scope.showAddButton = 'showAddButton' in $scope ? $scope.showAddButton : true;\n        $scope.showDeleteButton = 'showDeleteButton' in $scope ? $scope.showDeleteButton : true;\n\n        if ('controls' in $attrs) {\n          $scope.controlled = true;\n        }\n\n        function createFileLoadListener(file) {\n          return readEvent => {\n            const data = readEvent.target.result;\n            const result = $scope.onSelect({name: file.name, data});\n            if (result && result.then) {\n              result.then(() => {\n                $scope.model = data;\n              });\n            } else if (result !== false) {\n              $scope.$apply(() => {\n                $scope.model = data;\n              });\n            }\n          };\n        }\n\n        this.registerFileInput = input => {\n          fileInput = input;\n          fileInput.addEventListener('change', e => {\n            let imageFileSelected = false;\n            for (let i = 0; i < e.target.files.length; i++) {\n              const file = e.target.files[i];\n              if (file.type.indexOf('image/') === 0) {\n                imageFileSelected = true;\n                const reader = new FileReader();\n                reader.onload = createFileLoadListener(file);\n                reader.readAsDataURL(file);\n                break;\n              }\n            }\n            if (e.target.files.length && !imageFileSelected) {\n              alertService.error(RingMessageBundle.avatareditor_noselected());\n            }\n          });\n        };\n\n        $scope.controls = {};\n\n        function onClick(e) {\n          e.stopPropagation();\n        }\n\n        $scope.controls.select = () => {\n          if (!FileReader) {\n            alertService.error(RingMessageBundle.avatareditor_nosupport());\n          } else {\n            fileInput.addEventListener('click', onClick);\n            fileInput.dispatchEvent(new MouseEvent('click'));\n            fileInput.removeEventListener('click', onClick);\n          }\n        };\n\n        $scope.controls.remove = () => {\n          const data = '';\n          const result = $scope.onSelect({name: data, data});\n          if (result && result.then) {\n            result.then(() => {\n              $scope.model = data;\n            });\n          } else if (result !== false) {\n            $scope.model = data;\n          }\n        };\n\n        $scope.getDeleteLabel = () => (\n          $scope.deleteLabel || RingMessageBundle.avatareditor_delete()\n        );\n\n        $scope.getAddMessage = () => (\n          $scope.addMessage || RingMessageBundle.avatareditor_add()\n        );\n      }\n    ]\n  };\n}\n\nfunction rgAvatarEditorFileInput() {\n  return {\n    restrict: 'A',\n    require: '^rgAvatarEditor',\n    link: function link(scope, iElement, iAttrs, avatarEditorCtrl) {\n      avatarEditorCtrl.registerFileInput(iElement[0]);\n    }\n  };\n}\n\nangularModule.directive('rgAvatarEditor', rgAvatarEditor);\nangularModule.directive('rgAvatarEditorFileInput', rgAvatarEditorFileInput);\n\nexport default angularModule.name;\n",
  "examples": [
    {
      "name": "Avatar Editor Ng",
      "url": "examples/avatar-editor-ng/avatar-editor-ng.html",
      "disableAutoSize": false,
      "files": [
        {
          "type": "html",
          "content": "\n<div ng-app=\"test\" ng-strict-di ng-controller=\"testCtrl as ctrl\">\n  <rg-avatar-editor\n    on-select=\"ctrl.name = name\"\n    delete-label=\"Clear\"\n    ng-model=\"ctrl.data\"></rg-avatar-editor>\n\n  <h3>{{ ctrl.name || 'No file name' }}</h3>\n  <img style=\"max-width: 300px; max-height: 300px;\"ng-src=\"{{ ctrl.data }}\" />\n</div>\n     ",
          "showCode": true
        },
        {
          "type": "js",
          "content": "\nimport angular from 'angular';\nimport AvatarEditorNG from '@jetbrains/ring-ui/components/avatar-editor-ng/avatar-editor-ng';\n\nangular.module('test', [AvatarEditorNG]).controller('testCtrl', function () {\n   const ctrl = this;\n\n   ctrl.data = `data:image/svg+xml;utf8,\n     <svg viewBox=\"0 0 120 120\" xmlns=\"http://www.w3.org/2000/svg\">\n       <circle cx=\"60\" cy=\"60\" r=\"50\" style=\"fill: #00cc00\"/>\n     </svg>\n   `;\n });\n     ",
          "showCode": true
        }
      ]
    }
  ],
  "description": "Allows to choose images to be uploaded as Data URI. On-select attribute will receive the\nfilename as `name` and the file contents as `data`.",
  "attrs": {
    "name": "Avatar Editor Ng",
    "tags": "Ring UI Language",
    "category": "Legacy Angular",
    "description": "Allows to choose images to be uploaded as Data URI. On-select attribute will receive the\nfilename as `name` and the file contents as `data`.",
    "example": "   <example name=\"Avatar Editor Ng\">\n     <file name=\"index.html\">\n       <div ng-app=\"test\" ng-strict-di ng-controller=\"testCtrl as ctrl\">\n         <rg-avatar-editor\n           on-select=\"ctrl.name = name\"\n           delete-label=\"Clear\"\n           ng-model=\"ctrl.data\"></rg-avatar-editor>\n\n         <h3>{{ ctrl.name || 'No file name' }}</h3>\n         <img style=\"max-width: 300px; max-height: 300px;\"ng-src=\"{{ ctrl.data }}\" />\n       </div>\n     </file>\n     <file name=\"index.js\" webpack=\"true\">\n       import angular from 'angular';\n       import AvatarEditorNG from '@jetbrains/ring-ui/components/avatar-editor-ng/avatar-editor-ng';\n\n       angular.module('test', [AvatarEditorNG]).controller('testCtrl', function () {\n          const ctrl = this;\n\n          ctrl.data = `data:image/svg+xml;utf8,\n            <svg viewBox=\"0 0 120 120\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle cx=\"60\" cy=\"60\" r=\"50\" style=\"fill: #00cc00\"/>\n            </svg>\n          `;\n        });\n     </file>\n   </example>"
  }
};
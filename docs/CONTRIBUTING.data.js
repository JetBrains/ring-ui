window.source = {
  "title": "Contributing",
  "url": "CONTRIBUTING.html",
  "type": "md",
  "content": "---\ntitle: Contributing\ncategory: Docs\norder: 1\n---\n\n### Environment setup\n\n1. (macOS only) Install Xcode Command Line Tools: `xcode-select --install`\n2. Install Node.js\n3. Install Lerna: `npm install -g lerna`\n4. Bootstrap the packages: `lerna bootstrap`\n5. (Optional, macOS and Linux) Install the [status bar indicator](https://github.com/roman01la/anybar-webpack#known-apps) app to receive webpack build notifications.\n\n### Available commands\n\nTo start the server: `npm start` (runs the webpack dev server on http://localhost:9999)\n\nTo run tests: `npm test`\n\nTo lint code: `npm run lint`\n\nTo build production files: `npm run build`\n\n### Settings\n\nBy default, documentation is built using the `development` environment.\nUse the `--env.production` flag to switch it to `production`.\nEnvironment has an effect on source map generation. It also affects the following parameters:\n\n * **port**\n * **host**\n * **hub** (Hub server URI)\n * **clientId** (Ring UI service client ID in Hub)\n\nYou can change them by the following means (in order of precedence):\n\n1. Command line switch: `npm <start|run build> -- --env.<param> <value>`\nExample: `npm start -- --env.port 8765`\n2. Persistently using NPM: `npm config set @ring-ui/docs:<param> <value>`\nExample: `npm config set @ring-ui/docs:port 8765`\n3. Persistently for a given environment: `npm config set @ring-ui/docs:<environment>:<param> <value>`  \nExample: `npm config set @ring-ui/docs:development:port 8765`\n\n### Contributing\n\nTo add a new component, issue one of the following commands after changing to the `components` directory:\n  * For a plain ES6 component: `npm run component:es6`\n  * For a ReactJS component: `npm run component:react`\n  * For an AngularJS component: `npm run component:ng`\n  \nIt will ask for component name and then create the skeleton for you.\n\n### Is Lodash or Underscore available?\n\nInstead of utility libraries Ring UI uses new features of *ES2015* and beyond provided by [Babel.js](https://babeljs.io) and [core-js](https://github.com/zloirock/core-js/).\nPolyfills like `Array.prototype.find` that patch native objects should be imported manually (e.g. via `import 'core-js/modules/es6.array.find';`).\n\n### Is jQuery available?\n\nInstead of jQuery Ring UI uses modern DOM APIs, [DOM 4 polyfill](https://github.com/WebReflection/dom4) (should be imported via `import 'dom4';`) \nand some handy helpers located in the `dom` component. `jqLite` is still available for Angular.js components, however, using it is not recommended.\n\n### Wallaby support\n\nTo enable the `Wallaby.js` test runner follow these steps:\n \n1. Download and install the [Wallaby.js plugin](http://wallabyjs.com/) for WebStorm.\n2. Make sure Node.js is available at `/usr/local/bin/node`, if not â€“ create a symlink.  \n3. Run the `Wallaby` configuration in WebStorm.\n\n### Visual regression testing\n\n*Run the development server with `npm start` before executing the commands listed below*\n\nRing UI uses [Gemini](https://ru.bem.info/tools/testing/gemini) for visual regression testing. Gemini works\nby taking screenshots and comparing them to existing reference images. \n\nWe use [Sauce Labs](https://saucelabs.com/) as a cloud Selenium grid. In order to use it on your local machine, you need to have \na Sauce Labs account. **Note that simply logging in to Sauce Labs with a GitHub account is not enough, you need \nto create a regular account.** \n\nSet your username and access token as environment variables:\n```\nexport SAUCE_USERNAME=yourlogin\nexport SAUCE_ACCESS_KEY=yourkey\n```\n\nAfter you make some visual changes, run `npm run gemini-test` to make sure there are no regressions.\n\nTo update the reference images for a certain component (for example, `alert`):\n\n1. `cd packages/gemini`\n2. `npm run gemini-gather ../../components/alert/*.gemini.js`.\n",
  "examples": [],
  "attrs": {
    "title": "Contributing",
    "category": "Docs",
    "order": 1
  }
};
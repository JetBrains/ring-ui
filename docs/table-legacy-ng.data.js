window.source = {
  "title": "Table Legacy Ng",
  "url": "table-legacy-ng.html",
  "type": "js",
  "content": "import angular from 'angular';\nimport 'dom4';\nimport debounce from 'just-debounce-it';\n\nimport {getRect, getStyles, getWindowHeight} from '../global/dom';\nimport PlaceUnder from '../place-under-ng/place-under-ng';\nimport Checkbox from '../checkbox-ng/checkbox-ng';\n\nimport Selection from './table-legacy-ng__selection';\nimport SelectionNavigateActions from './table-legacy-ng__selection-navigate-actions';\nimport TableToolbar from './table-legacy-ng__toolbar';\nimport TablePager from './table-legacy-ng__pager';\n\nimport '../table-legacy/table-legacy.scss';\n\n/**\n * @name Table Legacy Ng\n * @category Legacy Angular\n * @description Displays tabular data.\n * @example-file ./table-legacy-ng.examples.html\n */\n\nconst angularModule = angular.module(\n  'Ring.table-legacy',\n  [TableToolbar, TablePager, Checkbox, PlaceUnder]\n);\n\nangularModule.directive('rgLegacyTable', function rgLegacyTableDirective() {\n  return {\n    restrict: 'E',\n    transclude: true,\n    template: require('./table-legacy-ng.html'),\n    controllerAs: 'ctrl',\n\n    /**\n     * {{\n     *   items: array, items of table\n     *   selection: {Selection}?, a selection object link can be provided to use it outside the table\n     * }}\n     */\n    scope: {\n      items: '=',\n      selection: '=?',\n      disableSelection: '@'\n    },\n\n    bindToController: true,\n\n    controller: function controller($scope) {\n      this.$onInit = () => {\n        if (this.disableSelection) {\n          return;\n        }\n\n        /**\n         * Create Selection instance first to make sure it is always available\n         * @type {Selection}\n         */\n        this.selection = new Selection(this.items, (name, item, index) => {\n          $scope.$emit(name, item, index);\n          $scope.$broadcast(name, item, index);\n        });\n\n        /**\n         * Updating items when data is initiated or updated\n         */\n        $scope.$watch(() => this.items, newItems => {\n          if (newItems) {\n            this.selection.setItems(newItems);\n          }\n        });\n      };\n    }\n  };\n});\n\nangularModule.directive('rgLegacyTableHeader',\n  function rgLegacyTableHeaderDirective(getClosestElementWithCommonParent) {\n    const HEADER_RESIZE_DEBOUNCE = 50;\n    const HEADER_SCROLL_DEBOUNCE = 10;\n    const TOOLBAR_FIXED_CLASSNAME = 'ring-table__toolbar-controls_fixed';\n\n    return {\n      restrict: 'E',\n      template: require('./table-legacy-ng__header.html'),\n      transclude: true,\n      replace: true,\n      link: function link(scope, iElement, iAttrs) {\n        const element = iElement[0];\n        let stickToElement = null;\n\n        scope.stickToSelector = iAttrs.stickTo;\n\n        //Shortcut for placing under table toolbar\n        if (iAttrs.stickToToolbar !== undefined) {\n          scope.stickToSelector = '.ring-table__toolbar';\n        }\n\n        const scrollableHeader = element.query('.ring-table__header:not(.ring-table__header_sticky)');\n        const fixedHeader = element.query('.ring-table__header_sticky');\n\n        const toolbarFixed = () => stickToElement.query(`.${TOOLBAR_FIXED_CLASSNAME}`) !== null;\n\n        /**\n         * Sync header columns width with real table\n         */\n        const resizeFixedHeader = debounce(() => {\n          fixedHeader.style.width = `${scrollableHeader.offsetWidth}px`;\n          const titles = fixedHeader.queryAll('.ring-table__title');\n\n          titles.forEach((titleElement, index) => {\n            const targetHeaderTitle = scrollableHeader.queryAll('.ring-table__title')[index];\n            titleElement.style.width = getStyles(targetHeaderTitle).width;\n          });\n\n        }, HEADER_RESIZE_DEBOUNCE, true);\n\n        /**\n         * Toggle headers on scroll. Also resize header columns with some big interval\n         */\n        const scrollListener = debounce(() => {\n          if (toolbarFixed()) {\n            fixedHeader.style.display = 'block';\n            scrollableHeader.style.visibility = 'hidden';\n          } else {\n            fixedHeader.style.display = 'none';\n            scrollableHeader.style.visibility = 'visible';\n          }\n\n          resizeFixedHeader();\n        }, HEADER_SCROLL_DEBOUNCE);\n\n        function startSticking() {\n          scope.$evalAsync(() => {\n            window.addEventListener('resize', resizeFixedHeader);\n            window.addEventListener('scroll', scrollListener);\n            scope.$on('rgLegacyTable:itemsChanged', scrollListener);\n          });\n        }\n\n        if (scope.stickToSelector) {\n          stickToElement = getClosestElementWithCommonParent(element, scope.stickToSelector);\n          startSticking();\n        }\n      }\n    };\n  }\n);\n\nangularModule.directive('rgLegacyTableBody', function rgLegacyTableBodyDirective() {\n  return {\n    restrict: 'E',\n    template: '<tbody ng-transclude></tbody>',\n    transclude: true,\n    replace: true\n  };\n});\n\nangularModule.directive('rgLegacyTableRow', function rgLegacyTableRowDirective() {\n  return {\n    template: require('./table-legacy-ng__row.html'),\n    restrict: 'E',\n    transclude: true,\n    replace: true,\n    require: ['^rgLegacyTable', 'rgLegacyTableRow'],\n\n    scope: {\n      rowItem: '='\n    },\n\n    link: function link(scope, iElement, iAttrs, ctrls) {\n      const rgLegacyTableCtrl = ctrls[0];\n      const rgLegacyTableRowCtrl = ctrls[1];\n      rgLegacyTableRowCtrl.setSelection(rgLegacyTableCtrl.selection);\n    },\n\n    controllerAs: 'rowCtrl',\n    bindToController: true,\n\n    controller: function controller($scope, $element) {\n      const element = $element[0];\n\n      let watchRowCheckFlag;\n      this.setSelection = selection => {\n        if (!selection) {\n          return;\n        }\n\n        this.selection = selection;\n\n        if (!watchRowCheckFlag) {\n          watchRowCheckFlag = $scope.$watch('rowCtrl.rowItem.checked', newValue => {\n            if (newValue !== undefined) {\n              this.selection.triggerSelectionChanged(this.rowItem);\n            }\n          });\n        }\n      };\n\n      this.setActiveItem = item => {\n        item && !item.unselectable && this.selection && this.selection.activateItem(item);\n      };\n\n      this.onMouseOver = item => {\n        item && !item.unselectable && this.selection && this.selection.setSuggestedItem(item);\n      };\n\n      this.onMouseOut = item => {\n        item &&\n        this.selection &&\n        item === this.selection.suggestedItem && this.selection.setSuggestedItem(null);\n      };\n\n      this.hasCheckedItems = () => {\n        if (!this.selection) {\n          return false;\n        }\n        //TODO: cache this operation if there are performance issues\n        const checkedItems = this.selection.getCheckedItems();\n        return checkedItems && checkedItems.length > 0;\n      };\n\n      function getRowOutOfViewInfo(el, offsetInRows) {\n        const rect = getRect(el);\n        const offset = rect.height * offsetInRows;\n\n        const isGoneUp = rect.top < offset;\n        const isGoneDown = rect.bottom > (getWindowHeight() - offset);\n\n        return {\n          offset,\n          isOutOfView: isGoneDown || isGoneUp,\n          isGoneUp,\n          isGoneDown\n        };\n      }\n\n      function addSpacingAfterScroll(offset) {\n        if (window.scrollY) {\n          window.scrollBy(0, offset);\n        }\n      }\n\n      $scope.$on('rgLegacyTable:activateItem', (e, item) => {\n        if (item === this.rowItem) {\n          const scrollInfo = getRowOutOfViewInfo(element, 2);\n          if (scrollInfo.isOutOfView) {\n            element.scrollIntoView(scrollInfo.isGoneUp);\n            addSpacingAfterScroll(scrollInfo.isGoneDown ? scrollInfo.offset : -scrollInfo.offset);\n          }\n        }\n      });\n    }\n  };\n});\n\nangularModule.\n  directive('rgLegacyTableHeaderCheckbox', function rgLegacyTableHeaderCheckboxDirective() {\n    return {\n      restrict: 'E',\n      require: '^rgLegacyTable',\n      replace: true,\n      template: '<span class=\"ring-table__header-checkbox\"><rg-checkbox ng-click=\"onClickChange()\" ng-model=\"allChecked\"/></span>',\n\n      link: function link(scope, iElement, iAttrs, tableCtrl) {\n        // TODO: reduce number of recheckSelection() calls\n        scope.allChecked = false;\n\n        function recheckSelection() {\n          if (tableCtrl.items && tableCtrl.items.length) {\n            scope.allChecked = tableCtrl.items.every(item => item.checked);\n          } else {\n            scope.allChecked = false;\n          }\n        }\n\n        function markAllItemsAs(state) {\n          tableCtrl.items.forEach(item => {\n            item.checked = state;\n          });\n        }\n\n        scope.$on('rgLegacyTable:itemsChanged', () => {\n          if (scope.allChecked) {\n            markAllItemsAs(true);\n          }\n          recheckSelection();\n        });\n        scope.$on('rgLegacyTable:selectionChanged', recheckSelection);\n\n        scope.onClickChange = () => {\n          markAllItemsAs(scope.allChecked);\n        };\n      }\n    };\n  });\n\n/**\n * A checkbox cell for table. Uses rg-table-row parent directive as model host\n */\nangularModule.directive('rgLegacyTableCheckboxCell', function rgLegacyTableCheckboxCellDirective() {\n  return {\n    restrict: 'E',\n    transclude: true,\n    require: '^rgLegacyTableRow',\n    replace: true,\n    template: '<td class=\"ring-table__selector ring-table__column_selector\" ng-class=\"{\\'ring-table__column\\': !isEmbedded}\"><rg-checkbox ng-model=\"getRowItem().checked\"/></td>',\n\n    link: function link(scope, iElement, iAttrs, rowCtrl) {\n      /**\n       * rowItem getter to use it as ng-model for checkbox\n       */\n      scope.getRowItem = () => rowCtrl.rowItem;\n      scope.isEmbedded = angular.isDefined(iAttrs.embedded);\n    }\n  };\n});\n\n/**\n * Table title wrapper, receive next attributes:\n * {{\n    border: whether or not title contain right border\n    active: makes title more bolder\n  }}\n */\nangularModule.directive('rgLegacyTableTitle', function rgLegacyTableTitleDirective() {\n  return {\n    restrict: 'E',\n    transclude: true,\n    replace: true,\n    scope: true,\n    template: require('./table-legacy-ng__title.html'),\n\n    link: function link(scope, iElement, iAttrs) {\n      /**\n       * One time property assigning without watching through isolated scope helps to improve performance\n       */\n      scope.isBorder = angular.isDefined(iAttrs.border);\n      scope.isActive = angular.isDefined(iAttrs.active);\n      scope.isPullRight = angular.isDefined(iAttrs.pullRight);\n      scope.isAlignRight = angular.isDefined(iAttrs.alignRight);\n      scope.isPullLeft = angular.isDefined(iAttrs.pullLeft);\n    }\n  };\n});\n\n/**\n * Column wrapper, receive next attributes:\n * {{\n    limited: is column width should be limited,\n    wide: for wide columns\n    avatar: for columns contains avatar\n  }}\n */\nangularModule.directive('rgLegacyTableColumn', function rgLegacyTableColumnDirective() {\n  return {\n    restrict: 'E',\n    transclude: true,\n    replace: true,\n    scope: true,\n    template: require('./table-legacy-ng__column.html'),\n\n    link: function link(scope, iElement, iAttrs) {\n      const element = iElement[0];\n      const FULL_WIDTH = 100;\n\n      scope.isLimited = angular.isDefined(iAttrs.limited);\n      scope.isUnlimited = angular.isDefined(iAttrs.unlimited);\n      scope.isAvatar = angular.isDefined(iAttrs.avatar);\n      scope.isWide = angular.isDefined(iAttrs.wide);\n      scope.isAlignRight = angular.isDefined(iAttrs.alignRight);\n      scope.isGray = angular.isDefined(iAttrs.gray);\n      scope.isPullRight = angular.isDefined(iAttrs.pullRight);\n      scope.isPullLeft = angular.isDefined(iAttrs.pullLeft);\n\n      function adjustUnlimitedColumnWidths() {\n        const unlimitedColumnsCount = element.parentNode.\n          queryAll('.ring-table__column[unlimited]').length;\n        if (unlimitedColumnsCount > 1) {\n          element.style.width = `${(FULL_WIDTH / unlimitedColumnsCount).toFixed()}%`;\n        }\n      }\n\n      if (scope.isUnlimited) {\n        adjustUnlimitedColumnWidths();\n      }\n    }\n  };\n});\n\n/**\n * Class with default hotkeys navigation actions (e.g. select, clear selection, move up/down)\n */\nangularModule.constant('SelectionNavigateActions', SelectionNavigateActions);\n\nexport default angularModule.name;\n",
  "examples": [
    {
      "name": "Table Legacy Ng",
      "url": "examples/table-legacy-ng/table-legacy-ng.html",
      "disableAutoSize": true,
      "files": [
        {
          "type": "html",
          "content": "\n<div ng-app=\"test\" ng-strict-di ng-controller=\"tableExample as ctrl\">\n  <rg-legacy-table-toolbar stick>\n    <div>Some toolbar content. Selected item:\n      {{ctrl.selection.getActiveItem().name}}\n    </div>\n  </rg-legacy-table-toolbar>\n\n  <rg-legacy-table items=\"ctrl.itemsArray\" selection=\"ctrl.selection\">\n    <rg-legacy-table-header>\n      <rg-legacy-table-title>Avatar</rg-legacy-table-title>\n      <rg-legacy-table-title>Check</rg-legacy-table-title>\n      <rg-legacy-table-title active>Name</rg-legacy-table-title>\n      <rg-legacy-table-title>Groups</rg-legacy-table-title>\n    </rg-legacy-table-header>\n\n    <rg-legacy-table-row row-item=\"item\" ng-repeat=\"item in ctrl.itemsArray\">\n      <rg-legacy-table-column avatar>\n        <img ng-if=\"::item.iconUrl\" ng-src=\"{{ ::item.iconUrl }}\"\n          class=\"ring-table__avatar__img\"/>\n      </rg-legacy-table-column>\n      <rg-legacy-table-checkbox-cell></rg-legacy-table-checkbox-cell>\n      <rg-legacy-table-column limited>{{ ::item.name }}</rg-legacy-table-column>\n      <rg-legacy-table-column wide limited>\n        <span class=\"ring-table__column-list\"\n          ng-repeat=\"subItem in ::item.subList\">{{ ::subItem.name }}</span>\n      </rg-legacy-table-column>\n    </rg-legacy-table-row>\n  </rg-legacy-table>\n</div>\n  ",
          "showCode": true
        },
        {
          "type": "js",
          "content": "\nimport angular from 'angular';\nimport TableLegacyNG from '@jetbrains/ring-ui/components/table-legacy-ng/table-legacy-ng';\n\nangular.module('test', [TableLegacyNG]).\n  controller('tableExample', function ($scope) {\n    var ctrl = this;\n\n    ctrl.itemsArray = [{\n      name: 'test1',\n      subList: [{name: 'some group'}],\n      iconUrl: 'https://d13yacurqjgara.cloudfront.net/users/317408/avatars/mini/Layout_Behance_Avatar_(1).jpg?1376382552'\n    }];\n\n    for (var i = 0; i < 20; i++) {\n      ctrl.itemsArray.push({\n        name: Math.random(),\n        subList: [\n          {name: Math.random()},\n          {name: Math.random()},\n          {name: Math.random()}\n        ]\n      });\n    }\n\n  });\n  ",
          "showCode": true
        },
        {
          "type": "css",
          "content": "\nbody {\n  margin: 0;\n}\n  ",
          "showCode": true
        }
      ]
    },
    {
      "name": "Table Legacy Ng without selection",
      "url": "examples/table-legacy-ng/table-legacy-ng-without-selection.html",
      "disableAutoSize": true,
      "files": [
        {
          "type": "html",
          "content": "\n<div ng-app=\"Ring.table-legacy\" ng-strict-di\n  ng-init=\"itemsArray = ['first', 'second', 'third', 'fourth']\">\n  <rg-legacy-table items=\"itemsArray\" disable-selection=\"true\">\n    <rg-legacy-table-row row-item=\"item\" ng-repeat=\"item in itemsArray\">\n      <rg-legacy-table-column>{{item}}</rg-legacy-table-column>\n    </rg-legacy-table-row>\n  </rg-legacy-table>\n</div>\n  ",
          "showCode": true
        },
        {
          "type": "js",
          "content": "\nimport angular from 'angular';\nimport '@jetbrains/ring-ui/components/table-legacy-ng/table-legacy-ng';\n  ",
          "showCode": true
        },
        {
          "type": "css",
          "content": "\nbody {\n  margin: 0;\n}\n  ",
          "showCode": true
        }
      ]
    },
    {
      "name": "Table Legacy Ng with sidebar",
      "url": "examples/table-legacy-ng/table-legacy-ng-with-sidebar.html",
      "disableAutoSize": true,
      "files": [
        {
          "type": "html",
          "content": "\n<h3>Scroll down to see the effect</h3>\n<div ng-app=\"test\" ng-strict-di ng-controller=\"tableExample as ctrl\">\n  <rg-sidebar show=\"ctrl.isShowSideBar\"\n    place-under-sibling=\".some-toolbar\"\n    top-offset=\"1\">\n    <div class=\"ring-sidebar__title\">Here is sidebar content</div>\n    <div class=\"ring-sidebar__section\">\n      {{ctrl.selection.getActiveItem().name}}\n    </div>\n    <rg-select\n      options=\"item.name for item in ctrl.itemsArray track by item.name\"></rg-select>\n\n    <rg-query-assist\n      x-data-source=\"ctrl.queryAssistSource\"\n      query=\"ctrl.query\"></rg-query-assist>\n  </rg-sidebar>\n\n  <rg-legacy-table-toolbar stick class=\"some-toolbar\">\n    <div>Some toolbar content. Selected\n      item: {{ctrl.selection.getActiveItem().name}}\n      <rg-sidebar-toggle-button model=\"ctrl.isShowSideBar\">Toggle\n        toolbar\n      </rg-sidebar-toggle-button>\n    </div>\n  </rg-legacy-table-toolbar>\n\n  <rg-legacy-table items=\"ctrl.itemsArray\" selection=\"ctrl.selection\">\n    <rg-legacy-table-header class=\"example__table-header\"\n      stick-to=\".some-toolbar\">\n      <rg-legacy-table-title>Avatar</rg-legacy-table-title>\n      <rg-legacy-table-title>Check</rg-legacy-table-title>\n      <rg-legacy-table-title active>Name</rg-legacy-table-title>\n      <rg-legacy-table-title></rg-legacy-table-title>\n    </rg-legacy-table-header>\n\n    <rg-legacy-table-row row-item=\"item\" ng-repeat=\"item in ctrl.itemsArray\">\n      <rg-legacy-table-column avatar>\n        <img ng-if=\"::item.iconUrl\" ng-src=\"{{ ::item.iconUrl }}\"\n          class=\"ring-table__avatar__img\"/>\n      </rg-legacy-table-column>\n      <rg-legacy-table-checkbox-cell></rg-legacy-table-checkbox-cell>\n      <rg-legacy-table-column limited>{{::item.name }}</rg-legacy-table-column>\n      <rg-legacy-table-column>\n        <rg-sidebar-toggle-button ng-show=\"item.active\"\n          model=\"ctrl.isShowSideBar\"></rg-sidebar-toggle-button>\n      </rg-legacy-table-column>\n    </rg-legacy-table-row>\n  </rg-legacy-table>\n</div>\n  ",
          "showCode": true
        },
        {
          "type": "js",
          "content": "\nimport angular from 'angular';\nimport TableNG from '@jetbrains/ring-ui/components/table-legacy-ng/table-legacy-ng';\nimport SelectNG from '@jetbrains/ring-ui/components/select-ng/select-ng';\nimport SidebarNG from '@jetbrains/ring-ui/components/sidebar-ng/sidebar-ng';\nimport QueryAssistNG from '@jetbrains/ring-ui/components/query-assist-ng/query-assist-ng';\n\nangular.module('test', [TableNG, SidebarNG, SelectNG, QueryAssistNG]).\n  controller('tableExample', function ($timeout, $scope) {\n    var ctrl = this;\n\n    ctrl.query = 'fooo'\n\n    ctrl.isShowSideBar = true;\n\n    $timeout(function () {\n      ctrl.itemsArray = [{\n        name: 'test1',\n        iconUrl: 'https://d13yacurqjgara.cloudfront.net/users/317408/avatars/mini/Layout_Behance_Avatar_(1).jpg?1376382552'\n      }];\n      for (var i = 0; i < 20; i++) {\n        ctrl.itemsArray.push({name: Math.random()});\n      }\n    }, 500);\n\n    ctrl.queryAssistSource = function ({query, caret, omitSuggestions}) {\n      return {\n        caret: caret,\n        query: query,\n        styleRanges: omitSuggestions ? [{\n          start: 0,\n          length: 1,\n          style: 'text'\n        }] : [],\n        suggestions: [{\n          prefix: 'login: ',\n          option: 'test',\n          suffix: ' ',\n          description: 'logins',\n          matchingStart: 0,\n          matchingEnd: 4,\n          caret: 2,\n          completionStart: 0,\n          completionEnd: 4,\n          group: 'logins',\n          icon: 'data:uri'\n        }]\n      };\n    };\n\n\n  });\n  ",
          "showCode": true
        },
        {
          "type": "css",
          "content": "\nbody {\n  margin: 0;\n}\n  ",
          "showCode": true
        }
      ]
    }
  ],
  "description": "Displays tabular data.",
  "attrs": {
    "name": "Table Legacy Ng",
    "category": "Legacy Angular",
    "description": "Displays tabular data.",
    "example-file": "./table-legacy-ng.examples.html"
  }
};
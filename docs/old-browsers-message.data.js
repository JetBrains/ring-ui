window.source = {
  "title": "Old Browsers Message",
  "url": "old-browsers-message.html",
  "type": "js",
  "content": "import sniffer from '../global/sniffer';\n\n/**\n * @name Old Browsers Message\n * @category Components\n * @tags Ring UI Language\n * @description Displays a full-screen \"Browser is unsupported\" message if a JavaScript error occurs on page load in an old browser.\n *\n * Note: this script does not have any dependencies, you should include it directly.\n * Once loaded, it attaches a global error handler. When your app finishes loading you should probably turn it off by calling oldBrowserMessage.stop();\n *\n * @example\n    <example name=\"Old Browsers Message\">\n      <file type=\"html\" disable-auto-size>\n        <div id=\"ring-old-browsers-message\" class=\"ring-old-browsers-message ring-old-browsers-message_hidden\" hidden>\n          <span id=\"ring-old-browsers-message__smile\" class=\"ring-old-browsers-message__smile\">{{ (&gt;_&lt;) }}</span>\n          <br/><br/>\n          <span id=\"ring-old-browsers-message__browser-message\">This version of your browser is not <a href=\"https://documentation.link\">supported</a>.<br/>\n          Try upgrading to the latest stable version.</span>\n          <span id=\"ring-old-browsers-message__error-message\">Something went seriously wrong.</span>\n          <br/><br/>\n          <!--[if IE 9]>\n            <span>When using IE9.0 or higher, make sure that compatibility mode is disabled.</span>\n          <![endif]-->\n        </div>\n      </file>\n      <file type=\"js\">\n        import '@jetbrains/ring-ui/components/old-browsers-message/old-browsers-message.css';\n        import '@jetbrains/ring-ui/components/old-browsers-message/old-browsers-message';\n\n        //Trigger an error to imitate an unsupported browser\n        Object.unknownMethodCall();\n      </file>\n    </example>\n */\n\n/**\n  The list of versions which are definitely supported. \"Browser is unsupported\"\n  won't be displayed for those and higher versions even when a JS error occurs\n  on application start.\n */\n\nconst MAJOR_VERSION_INDEX = 0;\n\nconst WHITE_LIST = {\n  chrome: 38,\n  firefox: 34,\n  safari: 7,\n  ie: 10,\n  edge: 1\n};\n\n\nlet smileChanges = 0;\nconst MAX_SMILE_CHANGES = 50;\nlet previousWindowErrorHandler;\n\nfunction changeSmileClickListener(event) {\n  const eyes = ['O', 'o', '-', '>', '<'];\n  const target = event.target || event.srcElement;\n\n  smileChanges++;\n\n  function rand(min, max) {\n    return Math.round((Math.random() * (max - min))) + min;\n  }\n\n  function getRandomEye() {\n    return eyes[rand(0, (eyes.length - 1))];\n  }\n\n  function getRandomSmile() {\n    if (smileChanges >= MAX_SMILE_CHANGES) {\n      return '\\\\\\\\ (x_x) //';\n    }\n\n    return `{{ (${getRandomEye()}_${getRandomEye()}) }}`;\n  }\n\n  target.innerHTML = getRandomSmile();\n}\n\nfunction attachSmileClickListener(smileNode) {\n  if (smileNode.addEventListener) {\n    smileNode.addEventListener('click', changeSmileClickListener);\n  } else if (smileNode.attachEvent) {\n    smileNode.attachEvent('onclick', changeSmileClickListener);\n  }\n}\n\nfunction browserInWhiteList() {\n  return sniffer.browser.version[MAJOR_VERSION_INDEX] >= WHITE_LIST[sniffer.browser.name];\n}\n\n/**\n * Listens to unhandled errors and displays passed node\n */\nfunction startOldBrowsersDetector(onOldBrowserDetected) {\n  previousWindowErrorHandler = window.onerror;\n\n  window.onerror = function oldBrowsersMessageShower(errorMsg, url, lineNumber) {\n    if (onOldBrowserDetected) {\n      onOldBrowserDetected();\n    }\n\n    if (previousWindowErrorHandler) {\n      return previousWindowErrorHandler(errorMsg, url, lineNumber);\n    }\n\n    return false;\n  };\n}\n\nfunction stopOldBrowserDetector() {\n  window.onerror = previousWindowErrorHandler;\n}\n\n\n//Start javascript error detection\nstartOldBrowsersDetector(() => {\n  const oldBrowsersMessageContainer = document.getElementById('ring-old-browsers-message');\n  const browserMessage = document.getElementById('ring-old-browsers-message__browser-message');\n  const errorMessage = document.getElementById('ring-old-browsers-message__error-message');\n  const smileNode = document.getElementById('ring-old-browsers-message__smile');\n\n  if (browserInWhiteList()) {\n    browserMessage.style.display = 'none';\n    errorMessage.style.display = 'block';\n  } else {\n    browserMessage.style.display = 'block';\n    errorMessage.style.display = 'none';\n  }\n\n  if (oldBrowsersMessageContainer) {\n    oldBrowsersMessageContainer.hidden = false;\n    oldBrowsersMessageContainer.style.display = 'block';\n  }\n\n  if (smileNode) {\n    attachSmileClickListener(smileNode);\n  }\n});\n\nexport {stopOldBrowserDetector as stop};\n",
  "examples": [
    {
      "name": "Old Browsers Message",
      "url": "examples/old-browsers-message/old-browsers-message.html",
      "disableAutoSize": true,
      "files": [
        {
          "type": "html",
          "content": "\n<div id=\"ring-old-browsers-message\" class=\"ring-old-browsers-message ring-old-browsers-message_hidden\" hidden>\n  <span id=\"ring-old-browsers-message__smile\" class=\"ring-old-browsers-message__smile\">{{ (&gt;_&lt;) }}</span>\n  <br/><br/>\n  <span id=\"ring-old-browsers-message__browser-message\">This version of your browser is not <a href=\"https://documentation.link\">supported</a>.<br/>\n  Try upgrading to the latest stable version.</span>\n  <span id=\"ring-old-browsers-message__error-message\">Something went seriously wrong.</span>\n  <br/><br/>\n  <!--[if IE 9]>\n    <span>When using IE9.0 or higher, make sure that compatibility mode is disabled.</span>\n  <![endif]-->\n</div>\n      ",
          "showCode": true
        },
        {
          "type": "js",
          "content": "\nimport '@jetbrains/ring-ui/components/old-browsers-message/old-browsers-message.css';\nimport '@jetbrains/ring-ui/components/old-browsers-message/old-browsers-message';\n\n//Trigger an error to imitate an unsupported browser\nObject.unknownMethodCall();\n      ",
          "showCode": true
        }
      ]
    }
  ],
  "description": "Displays a full-screen \"Browser is unsupported\" message if a JavaScript error occurs on page load in an old browser.\n\nNote: this script does not have any dependencies, you should include it directly.\nOnce loaded, it attaches a global error handler. When your app finishes loading you should probably turn it off by calling oldBrowserMessage.stop();",
  "attrs": {
    "name": "Old Browsers Message",
    "category": "Components",
    "tags": "Ring UI Language",
    "description": "Displays a full-screen \"Browser is unsupported\" message if a JavaScript error occurs on page load in an old browser.\n\nNote: this script does not have any dependencies, you should include it directly.\nOnce loaded, it attaches a global error handler. When your app finishes loading you should probably turn it off by calling oldBrowserMessage.stop();",
    "example": "    <example name=\"Old Browsers Message\">\n      <file type=\"html\" disable-auto-size>\n        <div id=\"ring-old-browsers-message\" class=\"ring-old-browsers-message ring-old-browsers-message_hidden\" hidden>\n          <span id=\"ring-old-browsers-message__smile\" class=\"ring-old-browsers-message__smile\">{{ (&gt;_&lt;) }}</span>\n          <br/><br/>\n          <span id=\"ring-old-browsers-message__browser-message\">This version of your browser is not <a href=\"https://documentation.link\">supported</a>.<br/>\n          Try upgrading to the latest stable version.</span>\n          <span id=\"ring-old-browsers-message__error-message\">Something went seriously wrong.</span>\n          <br/><br/>\n          <!--[if IE 9]>\n            <span>When using IE9.0 or higher, make sure that compatibility mode is disabled.</span>\n          <![endif]-->\n        </div>\n      </file>\n      <file type=\"js\">\n        import '@jetbrains/ring-ui/components/old-browsers-message/old-browsers-message.css';\n        import '@jetbrains/ring-ui/components/old-browsers-message/old-browsers-message';\n\n        //Trigger an error to imitate an unsupported browser\n        Object.unknownMethodCall();\n      </file>\n    </example>"
  }
};
@import "../global/global";

$ring-alert-font-size: 13px;
$ring-alert-line-height: 1.3;
$ring-alert-height: ($ring-alert-font-size * $ring-alert-line-height) + $ring-unit * 2;
$ring-alert-margin: 10px;

// Alerts
//
// Alerts are being used to notify users about something.
//
// <blockquote>Actually this class could be called Notifications, but this
// name conflicts with two different classes: browser notification API
// (https://developer.mozilla.org/en-US/docs/Web/API/notification)
// and Ring notifications in the header.</blockquote>
//
// There are four kinds of Alerts: regular notification, error, warning and
// success. A specific type of alert is defined by adding a
// modifier class to the base element.
//
// Alerts can be grouped into stacks in which they appear and disappear one by
// one. There is a JS module which implements the alerts stack, that is called
// <code>alerts</code>. If you want to create a notification stack on your own,
// you can wrap all notifications into an element with a class
// <code>ring-alerts</code>.
//
// You will find a markup example for an alert below, but note,
// that markup can vary. Optional elements include icons (from font-icon) and the
// <code>ring-alert__close</code>
// element that closes a notification. The latter is relevant only to stacked notifications,
// not inline ones.
//
// Note that the JS component is able to produce all the necessary markup,
// which comes handy in rich applications.
//
// Markup:
// <div class="ring-alert ring-alert_inline {$modifiers}">
//   <div class="ring-alert__icon ring-font-icon"></div>
//   <div class="ring-alert__caption">Message text</div>
//   <div class="ring-alert__close"></div>
// </div>
//
// .ring-alert_error    - Error message. Use <code>ring-font-icon_warning</code> as class for <code>ring-alert__icon</code>.
// .ring-alert_warning  - Warning, orange. Turns users' attention to a non-critical condition. Use <code>ring-font-icon_minus</code> as class for <code>ring-alert__icon</code>.
// .ring-alert_success  - Success message, green with a tick icon. Indicates a successfully completed action.  Use <code>ring-font-icon_ok</code> as class for <code>ring-alert__icon</code>.
//
// Styleguide 2.1

.ring-alerts {
  left: 50%;
  margin-left: -200px;
  position: fixed;
  top: -$ring-alert-margin - 2;
  width: 400px;
  z-index: $ring-alert-z-index;
}

.ring-alert {
  color: #1a1a1a;
  font-size: $ring-alert-font-size;
  height: $ring-alert-height;
  line-height: $ring-alert-line-height;
  margin-top: $ring-alert-margin;
  position: relative;
  transform-origin: 50% 50%;

  @include ring-font;
}

.ring-alert_shown {
  animation-name: appearing;
  animation-duration: 200ms;
  animation-iteration-count: 1;
}

.ring-alert_hidden {
  animation-name: hiding;
  animation-duration: 300ms;
  opacity: 0;
}

.ring-alert__inner {
  background: #fff;
  border: solid 1px #979797;
  border-radius: 2px;
  bottom: 0;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  left: 0;
  overflow: hidden;
  padding: $ring-unit 40px $ring-unit 0;
  position: absolute;
  right: 0;
}

.ring-alert_inline {
  margin-top: 0;

  .ring-alert__caption {
    padding: $ring-unit 0;
  }
}

// todo(igor.alexeenko): Understand, what to do with default colors,
// defined in _global.scss. Ask designer about it.

.ring-alert_success {
  color: #608900;
}

.ring-alert_error {
  color: #c10000;
}

.ring-alert_warning {
  color: #ff5a00;
}

.ring-alert__icon {
  bottom: 0;
  left: 0;
  position: absolute;
  top: 0;
  text-align: center;
  vertical-align: middle;
  width: 40px;
}

.ring-alert__caption {
  margin-left: 10px;
  margin-right: 30px;
  padding-right: 5px;
}

.ring-alert_error,
.ring-alert_success,
.ring-alert_warning {
  .ring-alert__caption {
    margin-left: 40px;
  }
}

// todo(igor.alexeenko): Overriding !important rule for font icons.
// Not very clear solution, but I want to align my icon to the middle of
// the first row of text in alert.
.ring-alert__close {
  color: #c0c0c0;
  cursor: pointer;
  font-size: 14px;
  position: absolute;
  right: 20px;
  text-align: right;
  top: 0;
}

body .ring-font-icon.ring-alert__icon,
body .ring-font-icon.ring-alert__close {
  line-height: $ring-alert-height !important;
}

.ring-font-icon.ring-alert__icon:before,
.ring-alert__close:before {
  display: inline-block;
  vertical-align: middle;
}

.ring-alert__link {
  cursor: pointer;
  text-decoration: underline;
}

@keyframes appearing {
  0% { height: 0; }
  100% { height: $ring-alert-height; }
}

@keyframes hiding {
  0% { opacity: 1; transform: scale(1); }
  70% { opacity: 0; transform: scale(1.3); }
  100% { opacity: 0; }
}
